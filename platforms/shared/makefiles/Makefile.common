define HEADER
   ____                                 __       
  / ___| ___  __ _ _ __ __ _ _ __ __ _ / _|_  __ 
 | |  _ / _ \/ _` | '__/ _` | '__/ _` | |_\ \/ / 
 | |_| |  __/ (_| | | | (_| | | | (_| |  _|>  <  
  \____|\___|\__,_|_|  \__, |_|  \__,_|_| /_/\_\ 
                       |___/                     

  ** Building for $(PLATFORM) platform **
  ** Git version: $(GIT_VERSION) **
  ** Profile: $(BUILD_CONFIG) **

endef
export HEADER

TARGET_NAME = geargrafx
GIT_VERSION := $(shell git describe --abbrev=7 --dirty --always --tags)
UNAME_S := $(shell uname -s)
PLATFORM = "undefined"

OBJECTS += $(SOURCES_C:.c=.o) $(SOURCES_CXX:.cpp=.o)

INCLUDES += -I$(SRC_DIR) -I$(DESKTOP_SRC_DIR)

INCLUDES += -I$(DEPS_DIR)/glad
INCLUDES += -I$(DEPS_DIR)/imgui
INCLUDES += -I$(DEPS_DIR)/libchdr/include
INCLUDES += -I$(DEPS_DIR)/lzma/include
INCLUDES += -I$(DEPS_DIR)/mINI
INCLUDES += -I$(DEPS_DIR)/miniz
INCLUDES += -I$(DEPS_DIR)/nfd
INCLUDES += -I$(DEPS_DIR)/stb
INCLUDES += -I$(DEPS_DIR)/zstd

USE_CLANG ?= 0
ifeq ($(USE_CLANG), 1)
    CXX = clang++
    CC = clang
else
    CXX = g++
    CC = gcc
endif

CPPFLAGS += $(INCLUDES)
CPPFLAGS += -Wall -Wextra -Wformat -fno-exceptions -DEMULATOR_BUILD=\"$(GIT_VERSION)\" -DZ7_ST -DZSTD_DISABLE_ASM

$(DEPS_DIR)/%.o: CPPFLAGS += -w

CXXFLAGS += -std=c++11
CFLAGS += -std=c99

DEBUG ?= 0
ifeq ($(DEBUG), 1)
    BUILD_CONFIG = Debug
    CPPFLAGS += -DDEBUG -g3 -fno-omit-frame-pointer -fno-optimize-sibling-calls
else
    BUILD_CONFIG = Release
    CPPFLAGS += -DNDEBUG -O3 -flto=auto
    LDFLAGS += -O3 -flto=auto
endif

SANITIZE ?= 0
ifeq ($(SANITIZE), 1)
    CPPFLAGS += -fsanitize=address,undefined -fno-sanitize-recover=all
    LDFLAGS += -fsanitize=address,undefined
endif

ifeq ($(UNAME_S), Linux)
    PLATFORM = "Linux"
    LDFLAGS += -lGL -ldl `sdl2-config --libs`
    CPPFLAGS += `sdl2-config --cflags`
    TARGET := $(TARGET_NAME)
else ifeq ($(UNAME_S), Darwin)
    PLATFORM = "macOS"
    LDFLAGS += -framework OpenGL `sdl2-config --static-libs`
    CPPFLAGS += `sdl2-config --cflags`
    CPPFLAGS += -I/opt/local/include
    TARGET := $(TARGET_NAME)
else
    PLATFORM = "Generic Unix-like/BSD"
    LDFLAGS += -lGL `sdl2-config --libs`
    CXXFLAGS += -std=gnu++11
    CPPFLAGS += `sdl2-config --cflags`
    TARGET := $(TARGET_NAME)
endif

all: header $(TARGET)
	@echo Build completed: $(TARGET_NAME) \($(BUILD_CONFIG)\) - $(GIT_VERSION) - $(PLATFORM)

$(TARGET): $(OBJECTS)
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS)

%.o: %.mm
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<

%.o: %.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<

%.o: %.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

clean:
	rm -f $(OBJECTS) $(TARGET)

header:
	@echo "$$HEADER"